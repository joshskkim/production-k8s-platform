# Prometheus configuration for comprehensive cluster monitoring
prometheus:
  prometheusSpec:
    # Resource requirements for production workloads
    resources:
      requests:
        memory: "2Gi"
        cpu: "1000m"
      limits:
        memory: "4Gi"
        cpu: "2000m"
    
    # Retention configuration
    retention: "30d"
    retentionSize: "50GB"
    
    # Storage configuration
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: "gp3-encrypted"
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 100Gi
    
    # Security context
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
      fsGroup: 65534
    
    # Additional scrape configs for custom metrics
    additionalScrapeConfigs:
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)

# Grafana configuration with pre-configured dashboards
grafana:
  adminPassword: "change-me-in-production"
  
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "200m"
  
  # Persistent storage for dashboards
  persistence:
    enabled: true
    storageClassName: "gp3-encrypted"
    size: 10Gi
  
  # Pre-configure data sources
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://prometheus-server:80
          access: proxy
          isDefault: true
        - name: Loki
          type: loki
          url: http://loki:3100
          access: proxy

# Node Exporter for node-level metrics
nodeExporter:
  enabled: true
  resources:
    requests:
      memory: "32Mi"
      cpu: "10m"
    limits:
      memory: "64Mi"
      cpu: "20m"

# State Metrics for Kubernetes object monitoring
kubeStateMetrics:
  enabled: true
  resources:
    requests:
      memory: "64Mi"
      cpu: "10m"
    limits:
      memory: "128Mi"
      cpu: "100m"

# Alert Manager configuration
alertmanager:
  alertmanagerSpec:
    resources:
      requests:
        memory: "64Mi"
        cpu: "10m"
      limits:
        memory: "128Mi"
        cpu: "100m"
    
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: "gp3-encrypted"
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 5Gi